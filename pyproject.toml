[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bash-script-maker"
version = "1.11.0"
description = "Ein GUI-Programm zur Erstellung von Bash-Scripts mit visueller UnterstÃ¼tzung"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Marcel Dellmann", email = "support@secure-bits.org"},
]
maintainers = [
    {name = "Marcel Dellmann", email = "support@secure-bits.org"},
]
keywords = ["bash", "script", "gui", "editor", "generator", "linux"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
    "Topic :: Text Editors :: Integrated Development Environments (IDE)",
    "Topic :: Software Development :: Code Generators",
]
requires-python = ">=3.8"
dependencies = [
    "ttkbootstrap>=1.10.1",
    "pygments>=2.15.1",
    "Pillow>=9.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "flake8>=3.8.0",
    "black>=21.0.0",
    "mypy>=0.800",
    "tox>=3.20.0",
    "twine>=3.0.0",
    "build>=0.7.0",
    "bandit>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/securebitsorg/bash-script-maker"
Documentation = "https://github.com/securebitsorg/bash-script-maker#readme"
Repository = "https://github.com/securebitsorg/bash-script-maker"
"Bug Reports" = "https://github.com/securebitsorg/bash-script-maker/issues"
Changelog = "https://github.com/securebitsorg/bash-script-maker/blob/main/CHANGELOG.md"

[project.gui-scripts]
bash-script-maker = "bash_script_maker:main"

[project.scripts]
bash-script-maker = "bash_script_maker:main"

[tool.setuptools]
py-modules = ["bash_script_maker", "syntax_highlighter", "localization", "custom_dialogs", "assets"]
include-package-data = true
zip-safe = false


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = [
    "tests",
]
python_files = "test_*.py"

[tool.coverage.run]
source = ["bash_script_maker", "syntax_highlighter"]
omit = [
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
]

# SEMANTIC-RELEASE KONFIGURATION
[tool.semantic_release]
version_variables = ["VERSION:__version__"]
build_command = "pip install build && python -m build"
commit_message = "chore(release): bump version to {version}"
commit_author = "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
tag_format = "v{version}"
branch = "main"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
